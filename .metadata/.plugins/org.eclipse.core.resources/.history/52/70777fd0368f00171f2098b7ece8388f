package trees;
import java.util.*;
public class SubTree {
	public boolean isSubtree(TreeNode s, TreeNode t) {
		if(t == null || s == null){
			return false;
		}
		if(t.val != s.val){
			isSubtree(s, t.left);
			isSubtree(s, t.right);
		}
		else{
			return subTreeUtil(s, t);
		}
		return false;
	}
	
	boolean subTreeUtil(TreeNode s, TreeNode t){
		if(t == null && s == null){
			return true;
		}
		if(t == null || s == null){
			return false;
		}
		return subTreeUtil(s.left, t.left) && subTreeUtil(s.right, t.right);
	}
	
	public static void main(String[] args) {
		TreeNode root = new TreeNode(1);
		root.left = new TreeNode(2);
		root.right = new TreeNode(3);
		root.left.left = new TreeNode(4);
		root.left.right = new TreeNode(5);
		root.right.left = new TreeNode(6);
		
		TreeNode n = new TreeNode(3);
		n.left = new TreeNode(4);
		n.right = new TreeNode(5);
		SubTree s = new SubTree();
		s.isSubtree(n, root);
		
		
	}
}
